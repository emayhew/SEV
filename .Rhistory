PercentChange = (NormRating/swSess.mean)*100) %>%
filter(RatingType != "Training")
## Plot sweetness means/se of normalized data
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, Norm_Mean), Norm_Mean)) +
geom_point() +
geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
ggsave("plots/SEV2/SEV2_NormMeanSE_Sweetness_bySample.png", height = 5, width = 9)
## Plot percent increase/decrease in sweetness of all samples
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
ggsave("plots/SEV2/SEV2_PercentChange_Sweetness_bySample.png", height = 5, width = 9)
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
mutate(NormRating = Rating - swSess.mean,
Norm_Mean = mean(NormRating),
PercentChange = (Norm_Mean/swSess.mean)*100) %>%
filter(RatingType != "Training")
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, Norm_Mean), Norm_Mean)) +
geom_point() +
geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
ggsave("plots/SEV2/SEV2_NormMeanSE_Sweetness_bySample.png", height = 5, width = 9)
## Plot percent increase/decrease in sweetness of all samples
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
## Normalize subject data by dividing their sweetness ratings by the mean of their sugar water control per session
ctrl.means <- df %>%
subset(SampleCode == "SW") %>%
group_by(SubjectCode, Session) %>%
select(-FlavRating) %>%
mutate(swSess.mean = mean(SweetRating)) %>%
transmute(SubjectCode,
swSess.mean) %>%
distinct()
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
mutate(NormRating = Rating - swSess.mean,
NormMean = mean(NormRating),
PercentChange = (NormMean/swSess.mean)*100) %>%
filter(RatingType != "Training")
## Plot sweetness means/se of normalized data
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, Norm_Mean), Norm_Mean)) +
geom_point() +
geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
ggsave("plots/SEV2/SEV2_NormMeanSE_Sweetness_bySample.png", height = 5, width = 9)
## Plot percent increase/decrease in sweetness of all samples
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
ggsave("plots/SEV2/SEV2_PercentChange_Sweetness_bySample.png", height = 5, width = 9)
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
mutate(NormRating = Rating - swSess.mean) %>%
group_by(SubjectCode, Sample) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
filter(RatingType != "Training")
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, Norm_Mean), Norm_Mean)) +
geom_point() +
geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
ggsave("plots/SEV2/SEV2_NormMeanSE_Sweetness_bySample.png", height = 5, width = 9)
## Plot percent increase/decrease in sweetness of all samples
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, Norm_Mean), Norm_Mean)) +
geom_boxplot() +
# geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
#geom_hline(yintercept =  0, color = "deepskyblue3") +
#ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n())) %>%
ggplot(aes(Sample, Norm_Mean)) +
geom_boxplot() +
# geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
#geom_hline(yintercept =  0, color = "deepskyblue3") +
#ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
norm.df %>%
filter(SubjectCode != 1028) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n()),
NormRating) %>%
ggplot(aes(reorder(Sample, NormRating), NormRating)) +
geom_boxplot() +
# geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
#geom_hline(yintercept =  0, color = "deepskyblue3") +
#ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
norm.df %>%
filter(SubjectCode != 1028,
SubjectCode != 1025) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n()),
NormRating) %>%
ggplot(aes(reorder(Sample, NormRating), NormRating)) +
geom_boxplot() +
# geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
#geom_hline(yintercept =  0, color = "deepskyblue3") +
#ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
norm.df %>%
filter(SubjectCode != 1028,
SubjectCode != 1025) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(Norm_Mean = mean(NormRating),
Norm_SE = sd(NormRating)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, Norm_Mean), Norm_Mean)) +
geom_point() +
geom_errorbar(aes(ymin = Norm_Mean - Norm_SE, ymax = Norm_Mean + Norm_SE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
ylim(-10,20) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Normalized Mean Sweetness Ratings of Each Sample")
ggsave("plots/SEV2/SEV2_NormMeanSE_Sweetness_bySample.png", height = 5, width = 9)
## Plot percent increase/decrease in sweetness of all samples
norm.df %>%
filter(SubjectCode != 1028,
SubjectCode != 1025) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
ggsave("plots/SEV2/SEV2_PercentChange_Sweetness_bySample.png", height = 5, width = 9)
## Plot sweetness means and SE facet by Subject
df %>%
group_by(SubjectCode, Sample) %>%
summarise(Sweetness_Mean = mean(SweetRating),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, Sweetness_Mean), Sweetness_Mean, color = Sample)) +
geom_point() +
geom_errorbar(aes(ymin = Sweetness_Mean - Sweetness_SE, ymax = Sweetness_Mean + Sweetness_SE), width = 0.5) +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~SubjectCode) +
ggtitle("Mean Sweetness Ratings of Each Sample")
View(ctrl.means)
View(ctrl.means)
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
mutate(NormRating = Rating - swSess.mean) %>%
group_by(SubjectCode, Sample)
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
mutate(NormRating = Rating - swSess.mean) %>%
group_by(SubjectCode, Sample) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100)) %>%
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
mutate(NormRating = Rating - swSess.mean) %>%
group_by(SubjectCode, Sample) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
filter(RatingType != "Training")
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
mutate(NormRating = Rating - swSess.mean) %>%
group_by(SubjectCode, Sample) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
group_by(SubjectCode, Sample) %>%
mutate(SubPercentMean = mean(PercentChange)) %>%
filter(RatingType != "Training")
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
transmute(SubPercentMean = mean(PercentChange),
SubjectCode,
Sample) %>%
filter(RatingType != "Training")
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
transmute(SubPercentMean = mean(PercentChange),
SubjectCode,
Sample) #%>%
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
ungroup() %>%
group_by(Sample, SubjectCode) %>%
transmute(SubPercentMean = mean(PercentChange),
SubjectCode,
Sample) #%>%
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
ungroup() %>%
group_by(Sample, SubjectCode) %>%
transmute(SubPercentMean = mean(PercentChange),
SubjectCode,
Sample) %>%
distinct()
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
ungroup() %>%
group_by(Sample, SubjectCode) %>%
transmute(SubPercentMean = mean(PercentChange),
SubjectCode,
Sample) %>%
distinct() %>%
ungroup() %>%
group_by(Sample) %>%
mutate(Sample.Mean.Percent = mean(SubPercentMean))
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
filter(RatingType != "Training") %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
ungroup() %>%
group_by(Sample, SubjectCode) %>%
transmute(SubPercentMean = mean(PercentChange),
SubjectCode,
Sample) %>%
distinct() %>%
ungroup() %>%
group_by(Sample) %>%
transmute(Sample.Mean.Percent = mean(SubPercentMean),
Sample,
SubPercentMean)
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
filter(RatingType != "Training") %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100)
TESTnorm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
filter(RatingType != "Training") %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
ungroup() %>%
group_by(Sample, SubjectCode) %>%
transmute(SubPercentMean = mean(PercentChange),
SubjectCode,
Sample) %>%
distinct() %>%
ungroup() %>%
group_by(Sample) %>%
transmute(Sample.Mean.Percent = mean(SubPercentMean),
Sample,
SubPercentMean)
TESTnorm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
filter(RatingType != "Training",
SubjectCode != 1028) %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (NormRating/swSess.mean)*100) %>%
ungroup() %>%
group_by(Sample, SubjectCode) %>%
transmute(SubPercentMean = mean(PercentChange),
SubjectCode,
Sample) %>%
distinct() %>%
ungroup() %>%
group_by(Sample) %>%
transmute(Sample.Mean.Percent = mean(SubPercentMean),
Sample,
SubPercentMean)
TESTnorm.df %>%
group_by(Sample) %>%
summarise(Mean = mean(Sample.Mean.Percent),
SE = sd(SubPercentMean)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, Mean), Mean, label = round(Mean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
norm.df %>%
filter(SubjectCode != 1028,
SubjectCode != 1025) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
#,SubjectCode != 1025) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
norm.df %>%
filter(SubjectCode != 1028
#,SubjectCode != 1025
) %>% #this person's data was ALL OVER THE PLACE!
group_by(Sample) %>%
summarise(PercentMean = mean(PercentChange),
PercentSE = sd(PercentChange)/sqrt(n())) %>%
ggplot(aes(reorder(Sample, PercentMean), PercentMean, label = round(PercentMean, digits = 2))) +
geom_point() +
# geom_text(aes(fill = Sample), color = "blue", fontface = "bold", angle = 45, vjust = 0, nudge_y = 12) +
geom_errorbar(aes(ymin = PercentMean - PercentSE, ymax = PercentMean + PercentSE), width = 0.5) +
geom_hline(yintercept =  0, color = "deepskyblue3") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Percent Change in Sweetness Rating Relative to Control")
install.packages("ggpubr")
install.packages("AICcmodavg")
library(ggpubr)
library(broom)
library(AICcmodavg)
summary(norm.df)
norm.df$SubjectCode <- as.character(norm.df$SubjectCode)
summary(norm.df)
norm.df <- df2 %>%
left_join(ctrl.means, df2, by = c("SubjectCode" = "SubjectCode", "Session" = "Session")) %>%
filter(RatingType != "Training") %>%
group_by(SubjectCode, Sample) %>%
mutate(NormRating = Rating - swSess.mean) %>%
mutate(PercentChange = (1-(swSess.mean/NormRating))*100)
one.way <- aov(NormRating ~ Sample, data = norm.df)
summary(one.way)
two.way <- aov(NormRating ~ Sample + SubjectCode, data = norm.df)
summary(two.way)
summary(norm.df)
norm.df$SubjectCode <- as.factor(norm.df$SubjectCode)
one.way <- aov(NormRating ~ Sample, data = norm.df)
summary(one.way)
two.way <- aov(NormRating ~ Sample + SubjectCode, data = norm.df)
summary(two.way)
summary(one.way)
summary(two.way)
interaction <- aov(NormRating ~ Sample*SubjectCode, data = norm.df)
summary(one.way)
summary(two.way)
summary(interaction)
blocking <- aov(NormRating ~ Sample + SubjectCode + Session, data = norm.df)
summary(blocking)
summary(norm.df)
model.set <- list("one.way", "two.way", "interaction", "blocking")
aictab(model.set, modnames = model.names)
interaction <- aov(NormRating ~ Sample*SubjectCode + SubjectCode*Session, data = norm.df)
summary(interaction)
norm.df$Session <- as.factor(norm.df$Session)
interaction <- aov(NormRating ~ Sample*SubjectCode + SubjectCode*Session, data = norm.df)
summary(interaction)
one.way <- aov(NormRating ~ Sample, data = norm.df)
two.way <- aov(NormRating ~ Sample + SubjectCode, data = norm.df)
interaction <- aov(NormRating ~ Sample*SubjectCode + SubjectCode*Session, data = norm.df)
blocking <- aov(NormRating ~ Sample + SubjectCode + Session, data = norm.df)
model.set <- list("one.way", "two.way", "interaction", "blocking")
model.names <- c("one.way", "two.way", "interaction", "blocking")
aictab(model.set, modnames = model.names)
model.set <- list(one.way, two.way, interaction, blocking)
model.names <- c("one.way", "two.way", "interaction", "blocking")
aictab(model.set, modnames = model.names)
par(mfrow=c(2,2))
plot(two.way)
par(mfrow = c(1,1))
plot(two.way)
tukey.two.way <- TukeyHSD(two.way)
tukey.two.way
tukey.plot.aov <- aov(NormRating ~ Sample:SubjectCode, data = norm.df)
tukey.plot.aov <- aov(NormRating ~ Sample:SubjectCode, data = norm.df)
tukey.plot.test <- TukeyHSD(tukey.plot.aov)
tukey.plot.test <- TukeyHSD(tukey.plot.aov)
plot(tukey.plot.test, las = 1)
plot(tukey.plot.test, las = 1)
ukey.plot.test
tukey.plot.aov
tukey.plot.aov <- aov(NormRating ~ Sample + SubjectCode, data = norm.df)
tukey.plot.aov
tukey.plot.aov <- aov(NormRating ~ Sample:SubjectCode, data = norm.df)
