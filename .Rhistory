pivot_longer(Flavor:Sweetness,
names_to = "Sensation",
values_to = "Mean") %>%
pivot_longer(seF:seS,
names_to = "SE_Type",
values_to = "SE") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE)) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
group_by(SampleCode) %>%
summarise(Flavor = mean(FlavRating),
Sweetness = mean(SweetRating),
#sdF = sd(FlavRating),
#sdS = sd(SweetRating))
seF = sd(FlavRating)/sqrt(n()),
seS = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(Flavor:Sweetness,
names_to = "Sensation",
values_to = "Mean") %>%
pivot_longer(seF:seS,
names_to = "SE_Type",
values_to = "SE") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), size =2) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
group_by(SampleCode) %>%
summarise(Flavor = mean(FlavRating),
Sweetness = mean(SweetRating),
#sdF = sd(FlavRating),
#sdS = sd(SweetRating))
seF = sd(FlavRating)/sqrt(n()),
seS = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(Flavor:Sweetness,
names_to = "Sensation",
values_to = "Mean") %>%
pivot_longer(seF:seS,
names_to = "SE_Type",
values_to = "SE") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 2) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
group_by(SampleCode) %>%
summarise(Flavor = mean(FlavRating),
Sweetness = mean(SweetRating),
#sdF = sd(FlavRating),
#sdS = sd(SweetRating))
seF = sd(FlavRating)/sqrt(n()),
seS = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(Flavor:Sweetness,
names_to = "Sensation",
values_to = "Mean") %>%
pivot_longer(seF:seS,
names_to = "SE_Type",
values_to = "SE") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
group_by(SampleCode) %>%
summarise(Flavor_mean_ = mean(FlavRating),
Sweetness_mean_ = mean(SweetRating),
Flavor_se_ = sd(FlavRating)/sqrt(n()),
Sweetness_se_ = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(Flavor_mean_:Sweetness_mean_,
names_to = "Sensation",
values_to = "Mean",
names_pattern = "(.*)_(.*_)") %>%
pivot_longer(Flavor_se_:Sweetness_se_,
names_to = "SE_Type",
values_to = "SE",
names_pattern = "(.*)_(.*_)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
group_by(SampleCode) %>%
summarise(Flavor_mean_ = mean(FlavRating),
Sweetness_mean_ = mean(SweetRating),
Flavor_se_ = sd(FlavRating)/sqrt(n()),
Sweetness_se_ = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(Flavor_mean_:Sweetness_mean_,
names_to = "Sensation",
values_to = "Mean",
names_pattern = "(.*)_(.*_)") %>%
pivot_longer(Flavor_se_:Sweetness_se_,
names_to = "SE_Type",
values_to = "SE",
names_pattern = "(.*)_(.*_)") #%>%
df %>%
group_by(SampleCode) %>%
summarise(Flavor_mean_ = mean(FlavRating),
Sweetness_mean_ = mean(SweetRating),
Flavor_se_ = sd(FlavRating)/sqrt(n()),
Sweetness_se_ = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*_)")
df %>%
group_by(SampleCode) %>%
summarise(Flavor_mean_ = mean(FlavRating),
Sweetness_mean_ = mean(SweetRating),
Flavor_se_ = sd(FlavRating)/sqrt(n()),
Sweetness_se_ = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*_)")
pivot_longer(Flavor_mean_:Sweetness_mean_,
names_to = "Sensation",
values_to = "Mean",
names_pattern = "(.*)_(.*_)") %>%
pivot_longer(Flavor_se_:Sweetness_se_,
names_to = "SE_Type",
values_to = "SE",
names_pattern = "(.*)_(.*_)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pivot_longer(Flavor_mean_:Sweetness_mean_,
names_to = "Sensation",
values_to = "Mean",
names_pattern = "(.*)_(.*_)") %>%
pivot_longer(Flavor_se_:Sweetness_se_,
names_to = "SE_Type",
values_to = "SE",
names_pattern = "(.*)_(.*_)") #%>%
df %>%
group_by(SampleCode) %>%
summarise(Flavor_mean_ = mean(FlavRating),
Sweetness_mean_ = mean(SweetRating),
Flavor_se_ = sd(FlavRating)/sqrt(n()),
Sweetness_se_ = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*_)")
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_se = sd(FlavRating)/sqrt(n()),
Sweetness_se = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)")
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_SE = sd(FlavRating)/sqrt(n()),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)")
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_SE = sd(FlavRating)/sqrt(n()),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#means with SE of flavor and sweetness ratings for each sample
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_SE = sd(FlavRating)/sqrt(n()),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5, size = 2) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#means with SE of flavor and sweetness ratings for each sample
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_SE = sd(FlavRating)/sqrt(n()),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5, size = 1) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#means with SE of flavor and sweetness ratings for each sample
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_SE = sd(FlavRating)/sqrt(n()),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5, size = 0.75) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("SEV2_MeanSE_FlavSweet_byCompound.png", height = 5, width = 9)
#means with SE of flavor and sweetness ratings for each sample
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_SE = sd(FlavRating)/sqrt(n()),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Mean Sensation Ratings of Each Sample")
ggsave("SEV2_MeanSE_FlavSweet_byCompound.png", height = 5, width = 9)
#Sweetness TRTs
trtS <- df %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
remove(test)
#Sweetness TRTs
trtS <- df %>%
select(SubjectCode, SampleCode, Rep, SweetRating) #%>%
#Sweetness TRTs
trtS <- df %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) #%>%
View(trtS)
View(trtS)
#Sweetness TRTs
trtS <- df %>%
filter(SampleCode != SW) %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Sweetness TRTs
trtS <- df %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
filter(SampleCode != SW) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Sweetness TRTs
trtS <- df %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
filter(SampleCode = SW) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Sweetness TRTs
trtS <- df %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
filter(SampleCode == SW) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Sweetness TRTs
trtS <- df %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
filter(SampleCode != SW) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Sweetness TRTs
trtS <- df %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
filter(SampleCode != SW) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Sweetness TRTs
trtS <- df %>%
filter(SampleCode != "SW") %>%
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Sweetness TRTs
trtS <- df %>%
filter(SampleCode != "SW") %>% #if SW is included, R makes Rep1 and Rep2 columns into lists of vectors rather than vectors because we have SW 1 and 2 that are in both sessions...I plan to find a workaround later
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Flavor TRTs
trtF <- df %>%
filter(SampleCode != "SW") %>%
select(SubjectCode, SampleCode, Rep, FlavRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = FlavRating) %>%
group_by(SubjectCode) %>%
summarise(flavorTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
View(trtF)
View(trtF)
View(trtS)
View(trtS)
allTRTs <- left_join(trtS, trtF)
View(allTRTs)
View(allTRTs)
View(allTRTs)
View(allTRTs)
trtS %>%
ggplot( aes(as.numeric(Rep1), as.numeric(Rep2), color = SampleCode))+
geom_point()+
facet_wrap(~as.factor(SubjectCode))
#Sweetness TRTs
trtS <- df %>%
filter(SampleCode != "SW") %>% #if SW is included, R makes Rep1 and Rep2 columns into lists of vectors rather than vectors because we have SW 1 and 2 that are in both sessions...I plan to find a workaround later
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
summarise(sweetTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#Flavor TRTs
trtF <- df %>%
filter(SampleCode != "SW") %>%
select(SubjectCode, SampleCode, Rep, FlavRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = FlavRating) %>%
group_by(SubjectCode) %>%
summarise(flavorTRT = cor(as.numeric(Rep1), as.numeric(Rep2)))
#combine dataframes
allTRTs <- left_join(trtS, trtF)
#plot sweetness TRTs
df %>%
filter(SampleCode != "SW") %>% #if SW is included, R makes Rep1 and Rep2 columns into lists of vectors rather than vectors because we have SW 1 and 2 that are in both sessions...I plan to find a workaround later
select(SubjectCode, SampleCode, Rep, SweetRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = SweetRating) %>%
group_by(SubjectCode) %>%
ggplot( aes(as.numeric(Rep1), as.numeric(Rep2), color = SampleCode))+
geom_point()+
facet_wrap(~as.factor(SubjectCode))
#plot flavor TRTs
df %>%
filter(SampleCode != "SW") %>% #if SW is included, R makes Rep1 and Rep2 columns into lists of vectors rather than vectors because we have SW 1 and 2 that are in both sessions...I plan to find a workaround later
select(SubjectCode, SampleCode, Rep, FlavRating) %>%
pivot_wider(names_from = Rep, names_prefix = "Rep", values_from = FlavRating) %>%
group_by(SubjectCode) %>%
ggplot( aes(as.numeric(Rep1), as.numeric(Rep2), color = SampleCode))+
geom_point()+
facet_wrap(~as.factor(SubjectCode))
View(Training.df)
View(Training.df)
library(tidyverse)
library(readxl)
library(ggplot2)
library(lubridate)
#read in and combine data
#training data on remembered sensations
Training.df<- read_excel("data/SEV_v2_-_Training_-_Raw_Data.xlsx", sheet = 4, skip = 3) %>%
rename(Rating = `Please mark the perceived intensity of {{sample_name}} exactly as you recorded it on your paper sheet.`) %>%
mutate(Session = 1) %>%
bind_rows(read_excel("data/SEV_v2_-_Training_refresher_for_sess_2_-_Raw_Data.xlsx", sheet = 4, skip = 3) %>%
rename(Rating = `Please mark the perceived intensity of {{sample_name}} on the scale below.(You may also mark them on your paper scale if you would like but it is not required.)`) %>%
mutate(Session = 2)) %>%
transmute(SubjectCode = `Participant Code`,
SampleName = `Sample Name`,
Rating,
Session)
#data on test samples
#the participant codes column for Session 2 are not the actual participant codes (see sheet 3 for those)
#I planned to either write code or manually adjust the participant codes after everyone has completed Session 2
df <- read_excel("data/SEV_v2_-_Session_1_-_Raw_Data.xlsx", sheet = 3, skip = 3) %>%
bind_rows(read_excel("data/SEV_v2_-_Session_2_-_Raw_Data.xlsx", sheet = 4, skip = 3)) %>%
transmute(SubjectCode = `Participant Code`,
SampleName = `Sample Name`,
Rep = `Repetition`,
SweetRating = `Please take a sip of sample {{sample_code}} and rate the intensity of sweetness only.Sweetness:  the pleasant taste sensation typically produced by sugars (such as sucrose or glucose)`,
FlavRating = `Please take a sip of sample {{sample_code}} and rate the intensity of flavor only.Flavor: the combined effect of taste sensations, aromas, and chemical feeling factors (e.g. burn of a chili, cooling of menthol) in the mouth.`
) %>%
separate(SampleName, into = c("SampleCode", "Sample"), sep = ". ") %>%
drop_na()
#means with SE of flavor and sweetness ratings for each sample
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_SE = sd(FlavRating)/sqrt(n()),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Mean Sensation Ratings of Each Sample")
ggsave("SEV2_MeanSE_FlavSweet_byCompound.png", height = 5, width = 9)
## SW average = 20.47857 for sweet, 14.31243 for flav
##SW SE = 1.595937 for sweet, 1.411350 for flav
## upper sweet limit = 22.074507, 15.72378 or flav
View(df)
View(df)
library(tidyverse)
library(readxl)
library(ggplot2)
library(lubridate)
#read in and combine data
#training data on remembered sensations
Training.df<- read_excel("data/SEV_v2_-_Training_-_Raw_Data.xlsx", sheet = 4, skip = 3) %>%
rename(Rating = `Please mark the perceived intensity of {{sample_name}} exactly as you recorded it on your paper sheet.`) %>%
mutate(Session = 1) %>%
bind_rows(read_excel("data/SEV_v2_-_Training_refresher_for_sess_2_-_Raw_Data.xlsx", sheet = 4, skip = 3) %>%
rename(Rating = `Please mark the perceived intensity of {{sample_name}} on the scale below.(You may also mark them on your paper scale if you would like but it is not required.)`) %>%
mutate(Session = 2)) %>%
transmute(SubjectCode = `Participant Code`,
SampleName = `Sample Name`,
Rating,
Session)
#data on test samples
#the participant codes column for Session 2 are not the actual participant codes (see sheet 3 for those)
#I planned to either write code or manually adjust the participant codes after everyone has completed Session 2
df <- read_excel("data/SEV_v2_-_Session_1_-_Raw_Data.xlsx", sheet = 3, skip = 3) %>%
bind_rows(read_excel("data/SEV_v2_-_Session_2_-_Raw_Data.xlsx", sheet = 4, skip = 3)) %>%
transmute(SubjectCode = `Participant Code`,
SampleName = `Sample Name`,
Rep = `Repetition`,
SweetRating = `Please take a sip of sample {{sample_code}} and rate the intensity of sweetness only.Sweetness:  the pleasant taste sensation typically produced by sugars (such as sucrose or glucose)`,
FlavRating = `Please take a sip of sample {{sample_code}} and rate the intensity of flavor only.Flavor: the combined effect of taste sensations, aromas, and chemical feeling factors (e.g. burn of a chili, cooling of menthol) in the mouth.`
) %>%
separate(SampleName, into = c("SampleCode", "Sample"), sep = ". ") %>%
drop_na() %>%
#This is Emily's pilotting data
filter(SubjectCode != 1080)
#means with SE of flavor and sweetness ratings for each sample
df %>%
group_by(SampleCode) %>%
summarise(Flavor_Mean = mean(FlavRating),
Sweetness_Mean = mean(SweetRating),
Flavor_SE = sd(FlavRating)/sqrt(n()),
Sweetness_SE = sd(SweetRating)/sqrt(n())) %>%
pivot_longer(cols = -SampleCode,
names_to = c("Sensation", ".value"),
names_pattern = "(.*)_(.*)") %>%
ggplot(aes(reorder(SampleCode, Mean), Mean, color = Sensation, shape = Sensation)) +
geom_point() +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.5) +
geom_hline(yintercept = 15.72378, color = "tomato1") +
geom_hline(yintercept =  22.074507, color = "deepskyblue3") +
ylim(0,100) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Mean Sensation Ratings of Each Sample")
ggsave("SEV2_MeanSE_FlavSweet_byCompound.png", height = 5, width = 9)
## SW average = 20.47857 for sweet, 14.31243 for flav
##SW SE = 1.595937 for sweet, 1.411350 for flav
## upper sweet limit = 22.074507, 15.72378 or flav
